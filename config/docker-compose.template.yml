networks:
  "{NETWORK}":
    name: "{NETWORK}"
    external: true

services:

  # ---------------------------------------------------------------------------
  # PostgreSQL Database

  "{NAME}":
    container_name: "{NAME}"
    hostname: "{NAME}"
    build: .
    image: "{NETWORK}/{NAME}:17.5"
    restart: unless-stopped
    # Restrict security privileges
    security_opt:
      - "no-new-privileges=true"
    cap_drop:
      - ALL
    # Run as the host user for volume mount permissions
    user: ${USER_GROUP_ID}
    environment:
      # Optional domain name for TLS certficates
      TLS_DOMAIN:          ${TLS_DOMAIN:-postgres}
      # Ensure we have information about the host user
      USER_ID:             ${USER_GROUP_ID:?}
      # Install the database in a custom folder for non-root access
      PGDATA:              /data/postgresql/main
      # Default superuser
      POSTGRES_USER:       ${POSTGRES_USER:?}
      POSTGRES_PASSWORD:   ${POSTGRES_PASSWORD:?}
      # Custom non-superuser
      CUSTOM_USER:         ${CUSTOM_USER:?}
      CUSTOM_PASSWORD:     ${CUSTOM_PASSWORD:?}
      CUSTOM_DB:           ${CUSTOM_DB:?}
      # Timetable user
      TIMETABLE_USER:      ${TIMETABLE_USER:?}
      TIMETABLE_PASSWORD:  ${TIMETABLE_PASSWORD:?}
      # Timezone
      TZ:                  'Canada/Mountain'
    volumes:
      # Database files and backups
      - ./data/postgres:/data/postgresql
      - ./data/pgbackrest:/data/pgbackrest
      - ./data/certs:/data/certs
      - ./config/pgbackrest.conf:/etc/pgbackrest/pgbackrest.conf
      # Custom general configuration
      - ./config/postgresql.conf:/etc/postgresql/postgresql.conf
      # Custom authentication configuration
      - ./config/pg_hba.conf:/etc/postgresql/pg_hba.conf
      # Custom entrypoints
      - ./scripts/docker/primary-entrypoint.sh:/usr/local/bin/docker-entrypoint.sh
      - ./scripts/docker/secondary-entrypoint.sh:/docker-entrypoint-initdb.d/entrypoint.sh
      # Custom source scripts
      - ./scripts/sql/:/docker-entrypoint-initdb.d/sql
    expose:
      - "5432"
    networks:
      - {NETWORK}
    healthcheck:
      test: [ "CMD-SHELL", "PGPASSWORD=$${CUSTOM_PASSWORD} psql --set=sslmode=require -d $${CUSTOM_DB} -U $${CUSTOM_USER} -l"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: 1
          memory: 4G
        reservations:
          cpus: 1
          memory: 2G

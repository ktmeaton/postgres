services:

  # ---------------------------------------------------------------------------
  # PostgreSQL Database

  postgres:
    container_name: postgres
    build: .
    image: bff-afirms/postgres:17.5
    restart: unless-stopped
    security_opt:
      - "no-new-privileges=true"
    cap_drop:
      - ALL
    environment:
      # Optional domain name for TLS certficates
      TLS_DOMAIN:        ${TLS_DOMAIN:-postgres}
      # Ensure we have information about the host user
      USER_ID:           ${USER_GROUP_ID:?}
      # Install the database in a custom folder for non-root access
      PGDATA:            /data/postgresql/main
      # Default superuser
      POSTGRES_USER:     ${POSTGRES_USER:?}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?}
      # Custom non-superuser
      CUSTOM_USER:       ${CUSTOM_USER:?}
      CUSTOM_PASSWORD:   ${CUSTOM_PASSWORD:?}
      CUSTOM_DB:         ${CUSTOM_DB:?}
      # Default connection (non-superuser)
      PGUSER:            ${CUSTOM_USER:?}
      PGDATABASE:        ${CUSTOM_DB:?}
      PGPASSWORD:        ${CUSTOM_PASSWORD:?}
    # Run as the host user for volume mount permissions
    user:                ${USER_GROUP_ID}
    volumes:
      # Database files and backups
      - ./data/postgres:/data/postgresql
      - ./data/pgbackrest:/data/pgbackrest
      - ./data/certs:/data/certs
      - ./config/pgbackrest.conf:/etc/pgbackrest/pgbackrest.conf
      # Custom general configuration
      # - ./config/postgresql.conf:/etc/postgresql/postgresql.conf
      # Custom auttentication configuration
      # - ./config/pg_hba.conf:/etc/postgresql/pg_hba.conf
      # Custom source scripts
      # - ./scripts/sql:/docker-entrypoint-initdb.d/sql
    expose:
      - "5432"
    command: "-c config_file=/etc/postgresql/postgresql.conf"
    healthcheck:
      test: [ "CMD-SHELL", "psql --set=sslmode=require -d $${CUSTOM_DB} -U $${CUSTOM_USER} -l"]
      interval: 5s
      timeout: 5s
      retries: 5
